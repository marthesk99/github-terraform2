# infrastructure-drift-detection.yml
# GitHub Actions workflow to detect drift in Azure infrastructure by comparing the live state of resources
# with the desired state defined in Terraform configuration files. This workflow runs on a schedule (every 6 hours)
# and can also be triggered manually.

name: Infrastructure Drift Detection

on:
  # Trigger the workflow on a schedule and allow manual triggers
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:        # Allows manual triggering of the workflow

jobs:
  detect_drift:
    runs-on: ubuntu-22.04
    environment: production

    # Environment variables required for authentication and configuration
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./modul10/DriftDetection/TerraformProject  # Directory where Terraform files are stored

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4  # Fetches the code from the repository for this job to use

      # Step 2: Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      # Step 3: Run Terraform Plan
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -detailed-exitcode -out=tfplan.binary || exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_ENV
        working-directory: ${{ env.WORKING_DIR }}
        continue-on-error: true

      # Step 4: Check for Drift
      - name: Check for Drift
        if: env.exit_code == '2'
        run: echo "Drift detected in the infrastructure."

      # Step 5: Generate and Save Drift Report
      - name: Generate and Save Drift Report
        if: env.exit_code == '2'
        run: terraform show -json tfplan.binary > drift_report.json
        working-directory: ${{ env.WORKING_DIR }}

      # Step 6: Upload Drift Report
      - name: Upload Drift Report
        if: env.exit_code == '2'
        uses: actions/upload-artifact@v4
        with:
          name: drift_report
          path: ${{ env.WORKING_DIR }}/drift_report.json

      # Step 7: Notify via GitHub Summary
      - name: Notify via GitHub Summary
        if: env.exit_code == '2'
        run: |
          echo "### Drift Detected in Azure Infrastructure" >> $GITHUB_STEP_SUMMARY
          echo "A drift was detected. Please review the attached drift report for details." >> $GITHUB_STEP_SUMMARY
